# Generated by Django 5.1.3 on 2024-12-12 04:46

import django.db.models.deletion
import user_management.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('main', '0003_stockdetails_high_stockdetails_low_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Wallet_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10000000)),
                ('selected_wallet', models.CharField(blank=True, max_length=255, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(default=user_management.models.generate_transaction_id_for_transaction_details, editable=False, max_length=10, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('purchase', 'Purchase')], max_length=20)),
                ('Wallet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.wallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(default=user_management.models.generate_transaction_id_for_Stock_Transaction, editable=False, max_length=10, unique=True)),
                ('transaction_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=20)),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.stock')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='StockTransaction', to='user_management.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='InverstedAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inversted_amount', models.DecimalField(decimal_places=2, max_digits=10000000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_amount', models.DecimalField(decimal_places=2, max_digits=10000000)),
                ('Wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='HoldingStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=20000)),
                ('average_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('complete', 'Complete')], default='buy', max_length=20)),
                ('inversted_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10000000)),
                ('current_price', models.DecimalField(decimal_places=2, default=0, max_digits=10000000)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.stock')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_management.wallet')),
            ],
        ),
    ]
